####################################
# version 15.11.12 inclined wall
####################################


#target angle in degrees
variable targetAngle equal 4

variable deltarf equal 0.5		# start step size of rolling friction
variable i loop 8			# number of refinements, each refinement step size is divided by 5
variable vyThresh equal 10^-3		# y - vel threshold
variable runInterv equal 10000		# no. of timesteps each iteration


variable Pi equal 3.14159

variable ff equal 0.6
variable frf equal 2.
variable f_wall equal 0.46
variable cor equal 0.2

variable rfvisc equal 0.0001

####################################
variable r0org equal 0.00025
variable nParticles equal 100
####################################

# dimensions of simulation domain
variable    nx  equal   -20*${r0org} #-0.1 #-10*${r0org}    # neg. x-value
variable    px  equal    100*${r0org} #0.2 #100*${r0org}    # pos. x-value
variable    ny  equal   -20*${r0org} #-0.1 #-10*${r0org}        # neg. y-value
variable    py  equal    100*${r0org} #0.2 #100*${r0org}        # pos. y-value
variable    nz  equal   -20*${r0org} #-0.1 #-10*${r0org}          # neg. z-value
variable    pz  equal    100*${r0org} #0.2 #100*${r0org}    # pos. z-value

variable    pins equal   0.01 #4*${r0org}

variable    skin equal   0.5*${r0org}

#echo        both
atom_style	granular
atom_modify	map array
communicate	single vel yes

boundary	f f f
newton		off

units		si

region		reg block ${nx} ${px} ${ny} ${py} ${nz} ${pz} units box
create_box	2 reg

neighbor	${skin} bin
neigh_modify	delay 0

#Material properties required for new pair styles
fix 		m1 all property/global youngsModulus peratomtype 1.e7 1.e7
fix 		m2 all property/global poissonsRatio peratomtype 0.3 0.3 
fix 		m3 all property/global coefficientRestitution peratomtypepair 2 ${cor} ${cor} ${cor} ${cor} 
fix 		m4 all property/global coefficientFriction peratomtypepair 2 ${ff} ${f_wall} ${f_wall} ${f_wall}
fix 		m5 all property/global coefficientRollingFriction peratomtypepair 2 ${frf} ${frf} ${frf} ${frf}
fix 		m6 all property/global characteristicVelocity scalar 1.
fix     m7 all property/global coefficientRollingViscousDamping peratomtypepair 2 ${rfvisc} ${rfvisc} ${rfvisc} ${rfvisc}

#pair style
pair_style 	gran/hooke/history rolling_friction epsd
pair_coeff	* *

#timestep, gravity
timestep	0.00001
fix		gravi all gravity 9.81 vector 0.0 0.0 -1.0

#walls
fix		xwall1 all wall/gran/hooke/history   primitive type 2  xplane ${nx} rolling_friction epsd #cdt
fix		xwall2 all wall/gran/hooke/history   primitive type 2  xplane ${px} rolling_friction epsd #cdt
fix		ywall1 all wall/gran/hooke/history   primitive type 2  yplane ${ny} rolling_friction epsd #cdt
fix		ywall2 all wall/gran/hooke/history   primitive type 2  yplane ${py} rolling_friction epsd #cdt
fix		zwall1 all wall/gran/hooke/history   primitive type 2  zplane ${nz} rolling_friction epsd #cdt
fix		zwall2 all wall/gran/hooke/history   primitive type 2  zplane ${pz} rolling_friction epsd #cdt

#import mesh from cad
#fix cad1 all mesh/surface file wall.stl type 2

#particle distributions
fix		pts1 all particletemplate/sphere 1 atom_type 1 density constant 2505 radius constant ${r0org}
fix		pdd all particledistribution/discrete 1. 1 pts1 1. 

#particle insertion
region		bc block 0 ${px} 0 ${py} 0. ${pins} units box
fix		    ins all insert/pack seed 100001 distributiontemplate pdd vel constant 0. 0. -0.5 insert_every once overlapcheck no all_in yes particles_in_region ${nParticles} region bc

#apply integration
fix		    integr all nve/sphere

#screen output
compute		1 all erotate/sphere
thermo_style	custom step atoms ke c_1 vol cpu
thermo		1000
thermo_modify	lost ignore norm no
compute_modify	thermo_temp dynamic yes

#insert the first particles so that dump is not empty
run		100
dump		dmp all custom 100 ./post/dump_*.liggghts id type type x y z ix iy iz vx vy vz fx fy fz omegax omegay omegaz radius omegaz radius 

#run particle relaxation - check kinetic energy
variable ke equal ke
print "ke ${ke}"
variable kin_en_thre equal 10^-7

label loop
  print "-----> Checking Kinetic Energy..."
  if "${ke} < ${kin_en_thre}" then "jump in_inclinedWall.liggghts endloop"
  print "-----> ke ${ke}, ke_threshold ${kin_en_thre}, continuing run"  
  #set group all vx 0. vy 0. vz 0.
  run 500
jump in_inclinedWall.liggghts loop
label endloop


# change gravitation vector to desired angle
unfix gravi
variable gravy equal sin(${targetAngle}/180*${Pi})
variable gravz equal -1*cos(${targetAngle}/180*${Pi})
fix gravi all gravity 9.81 vector 0.0 ${gravy} ${gravz}

velocity all zero linear
velocity all zero angular


# start iteration of rolling friction $frf

compute vysum all reduce sum vy
variable vely equal c_vysum/${nParticles}

label rfLoop
  if "${i} > 7" then "jump in_inclinedWall.liggghts endrfLoop"
  variable frf equal ${frf}-${deltarf}

  if "${frf} < 0" then "jump in_inclinedWall.liggghts endrfLoop"

  unfix m5
  fix m5 all property/global coefficientRollingFriction peratomtypepair 2 ${frf} ${frf} ${frf} ${frf}

  run ${runInterv} every ${runInterv} "print 'velocity = ${vely}'"
  
  if "${vely} < ${vyThresh}" then "jump in_inclinedWall.liggghts elseLbl"

    print "particles rolling -> RELOAD at rf ${frf}+${deltarf}"
    variable frf equal ${frf}+${deltarf}
    variable deltarf equal ${deltarf}/5.
    velocity all zero linear
    velocity all zero angular
    next i
  jump in_inclinedWall.liggghts rfLoop
  
  label elseLbl
    print "particles not rolling, continuing run at rf ${frf}-${deltarf}"
    velocity all zero linear
    velocity all zero angular
  
 jump in_inclinedWall.liggghts rfLoop



label endrfLoop

print "final rf ${frf}"

